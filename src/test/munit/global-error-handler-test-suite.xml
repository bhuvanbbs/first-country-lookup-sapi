<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="global-error-handler-test-suite.xml" />
	<munit:test name="global-error-test-method-not-allowed" doc:id="a73992be-1692-4f2f-895c-b50316838cbd" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="110c6f3b-025a-4bc5-b70a-da9f2a8acc2f" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="24af605a-46a7-4110-9489-6b28142c045a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="cid" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="accountId" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="22dd0ac4-3bd2-4f03-bcb3-eaa9054a6322" >
				<munit:payload value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-main" doc:id="52156838-8cb6-4a61-a8c9-c05332a6651e" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e99c5a1c-474a-4168-bb09-1493eee03b03" message="405" >
				<munit-tools:that ><![CDATA[vars.httpstatus]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="global-error-test-not-found" doc:id="071c2c34-b8cd-460a-bdf1-35f0d1a713b0" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="e8dc95c9-6e5a-4806-b1b3-e3b83839b467" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="24af605a-46a7-4110-9489-6b28142c045a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="cid" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="accountId" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="fca98bf4-b43e-4720-aecf-8f5deac14596" >
				<munit:payload value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-main" doc:id="8307ea80-b040-4f76-9616-ae2e9450cd8f" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b24bae81-1b6f-48aa-8e46-bebc7eb6630e" message="404" >
				<munit-tools:that ><![CDATA[vars.httpstatus]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="global-error-test-unsupported-media-type" doc:id="2058f1ae-af7b-4ddb-bbba-c8c2fc652f44" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="6ab066d1-eb0b-45e6-a10a-ad3de3177baf" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="24af605a-46a7-4110-9489-6b28142c045a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="cid" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="accountId" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="bce73887-c8e8-4981-a35b-81ce1c2c5cd1" >
				<munit:payload value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-main" doc:id="df042cda-0f52-4c0e-a3b8-24fb8938eb8a" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="dd1ca0e3-036d-4b8f-b2e2-3fad5fb87bd4" message="415" >
				<munit-tools:that ><![CDATA[vars.httpstatus]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="global-error-test-invalid-input" doc:id="edb9c987-1510-4880-8d3c-79c2d8b6d94e" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="df23622c-7741-40be-9d80-4214103ff4c6" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="24af605a-46a7-4110-9489-6b28142c045a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="SALESFORCE:INVALID_INPUT" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="cid" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="accountId" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d82ba3a8-4184-4105-bc48-ce77634e701a" >
				<munit:payload value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-main" doc:id="4d5e6c2e-02bb-457f-a86e-c5f12ed3fc63" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="70b694c7-5cff-4cd2-8f8e-24a9b88710ef" message="400" >
				<munit-tools:that ><![CDATA[vars.httpstatus]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="global-error-test-invalid-bad-request" doc:id="e1021ba8-5e63-49b6-bee9-bfa9abbc05e8" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="e502dff1-26cc-4b87-b9b9-f3fc691cb5fc" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="24af605a-46a7-4110-9489-6b28142c045a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="cid" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="accountId" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="913980ac-740d-487a-b419-99db94cc815c" >
				<munit:payload value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-main" doc:id="12912c68-8e2e-44f2-8768-735ee315c49a" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="3458ded1-87fa-4cde-a3bd-19584f7ef0e8" message="400" >
				<munit-tools:that ><![CDATA[vars.httpstatus]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

</mule>
